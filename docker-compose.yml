version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dental-store-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: dental_store
      POSTGRES_USER: dental_user
      POSTGRES_PASSWORD: dental_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dental_user -d dental_store"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: dental-store-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: dental-auth-service
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://dental_user:dental_password_2024@postgres:5432/dental_store
      JWT_SECRET: SFxyRDWtaBCOeVOHD1h1A0kpMXs74V7/HJbNFUJW7qhKHUv9s4zmxUrkgkjjnPC91WmBiWb0bzpJMWdycC0k9Q==
      JWT_EXPIRES_IN: 24h
      BCRYPT_SALT_ROUNDS: 12
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Service
  product-service:
    build:
      context: ./smile-shop-pro/product-service
      dockerfile: Dockerfile
    container_name: dental-product-service
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: production
      PORT: 5001
      DATABASE_URL: postgresql://dental_user:dental_password_2024@postgres:5432/dental_store
      AUTH_SERVICE_URL: http://auth-service:5000
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Order Service
  order-service:
    build:
      context: ./smile-shop-pro/order-service
      dockerfile: Dockerfile
    container_name: dental-order-service
    restart: unless-stopped
    ports:
      - "5002:5002"
    environment:
      NODE_ENV: production
      PORT: 5002
      DATABASE_URL: postgresql://dental_user:dental_password_2024@postgres:5432/dental_store
      AUTH_SERVICE_URL: http://auth-service:5000
      PRODUCT_SERVICE_URL: http://product-service:5001
      PAYMENT_SERVICE_URL: http://payment-service:5003
      SHIPMENT_SERVICE_URL: http://shipment-service:5004
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Payment Service
  payment-service:
    build:
      context: ./smile-shop-pro/payment-service
      dockerfile: Dockerfile
    container_name: dental-payment-service
    restart: unless-stopped
    ports:
      - "5003:5003"
    environment:
      NODE_ENV: production
      PORT: 5003
      DATABASE_URL: postgresql://dental_user:dental_password_2024@postgres:5432/dental_store
      AUTH_SERVICE_URL: http://auth-service:5000
      ORDER_SERVICE_URL: http://order-service:5002
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Shipment Service
  shipment-service:
    build:
      context: ./smile-shop-pro/shipment-service
      dockerfile: Dockerfile
    container_name: dental-shipment-service
    restart: unless-stopped
    ports:
      - "5004:5004"
    environment:
      NODE_ENV: production
      PORT: 5004
      DATABASE_URL: postgresql://dental_user:dental_password_2024@postgres:5432/dental_store
      AUTH_SERVICE_URL: http://auth-service:5000
      ORDER_SERVICE_URL: http://order-service:5002
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./smile-shop-pro
      dockerfile: Dockerfile
    container_name: dental-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      VITE_AUTH_SERVICE_URL: http://localhost:5000
      VITE_PRODUCT_SERVICE_URL: http://localhost:5001
      VITE_ORDER_SERVICE_URL: http://localhost:5002
      VITE_PAYMENT_SERVICE_URL: http://localhost:5003
      VITE_SHIPMENT_SERVICE_URL: http://localhost:5004
      VITE_PRIMARY_CURRENCY: USD
      VITE_LOCAL_CURRENCY: SDG
    depends_on:
      auth-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      shipment-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: dental-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: dental-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: dental-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: dental-store-network
